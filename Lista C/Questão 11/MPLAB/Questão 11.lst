CCS PCM C Compiler, Version 5.025, 30560               11-mai-22 18:10

               Filename:   C:\Users\nilof\OneDrive\Documentos\UFPI\3° Período\Arquitetura de Sistemas\Lista C\Questão 11\MPLAB\Questão 11.lst

               ROM used:   151 words (2%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           12 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 7

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   062
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   03E
001B:  MOVLW  8C
001C:  MOVWF  04
001D:  BTFSS  00.0
001E:  GOTO   021
001F:  BTFSC  0C.0
0020:  GOTO   038
0021:  MOVLW  8C
0022:  MOVWF  04
0023:  BTFSS  00.1
0024:  GOTO   027
0025:  BTFSC  0C.1
0026:  GOTO   03B
0027:  MOVF   22,W
0028:  MOVWF  04
0029:  MOVF   23,W
002A:  MOVWF  77
002B:  MOVF   24,W
002C:  MOVWF  78
002D:  MOVF   25,W
002E:  MOVWF  79
002F:  MOVF   26,W
0030:  MOVWF  7A
0031:  MOVF   20,W
0032:  MOVWF  0A
0033:  SWAPF  21,W
0034:  MOVWF  03
0035:  SWAPF  7F,F
0036:  SWAPF  7F,W
0037:  RETFIE
0038:  BCF    0A.3
0039:  BCF    0A.4
003A:  GOTO   04C
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   059
003E:  BCF    0A.3
003F:  BCF    0A.4
0040:  GOTO   041
.................... /* 
.................... Discente: Nilo Rodrigues Alves Filho 
.................... Questão 11: 
.................... Utilizando as interrupções dos três timers, configure o TIMER0 para gerar uma interrupção a cada 100 us, o TIMER1 a cada 200 us e o TIMER2 a cada 300 us.  
.................... A ordem de prioridade das interrupções é: TIMER0, TIMER1 e TIMER2, sendo a interrupção do TIMER0, a interrupção de maior prioridade e a do TIMER2, a de menor prioridade.  
.................... A rotina de tratamento de interrupção do TIMER0 comuta o estado do pino RD7, a do TIMER1 comuta o estado do pino RD6 e por fim a do TIMER2 comuta o estado do pino RD5.  
.................... Nesse caso, é possível duas dessas interrupções ocorrerem ao mesmo tempo? Se sim, quais? É possível também a ocorrência dessas três interrupções ao mesmo tempo? Se sim, quais e por que?  
.................... */ 
....................  
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #include "regs_pic16f877a.h"      
.................... // DEFS_877  
.................... //  
.................... // Standard definitions for PIC16F877  
.................... //  
.................... // Copyright, Peter H. Anderson, Baltimore, MD, June, '99  
....................   
.................... //#define byte int  
....................  
.................... //#byte PORTD = 0x08 
.................... //#bit INTF = 0xb.1 
....................  
.................... #list  
....................  
....................  
....................  
.................... #use fast_io(B) 
.................... #use fast_io(D) 
.................... #use delay(clock = 4M)     
.................... #priority INT_TIMER0, INT_TIMER1, INT_TIMER2  
....................  
.................... // Interrupção do Timer0 
.................... #int_timer0 
.................... void Interrupt0(){ 
.................... 	if (T0IF){  
0041:  BTFSS  0B.2
0042:  GOTO   048
....................     	T0IF = 0; 
0043:  BCF    0B.2
....................     	set_timer0(156); 
0044:  MOVLW  9C
0045:  MOVWF  01
....................      	output_toggle(pin_d7);     
0046:  MOVLW  80
0047:  XORWF  08,F
.................... 	} 
.................... }  
....................  
.................... // Interrupção do Timer1 
0048:  BCF    0B.2
0049:  BCF    0A.3
004A:  BCF    0A.4
004B:  GOTO   027
.................... #int_timer1 
.................... void Interrupt1(){ 
.................... 	if (TMR1IF){  
004C:  BTFSS  0C.0
004D:  GOTO   055
....................     	TMR1IF = 0; 
004E:  BCF    0C.0
....................     	TMR1H = 0xFF; 
004F:  MOVLW  FF
0050:  MOVWF  0F
....................     	TMR1L = 0x38; 
0051:  MOVLW  38
0052:  MOVWF  0E
....................      	output_toggle(pin_d6);     
0053:  MOVLW  40
0054:  XORWF  08,F
....................   	} 
.................... } 
....................  
.................... // Interrupção do Timer2   
0055:  BCF    0C.0
0056:  BCF    0A.3
0057:  BCF    0A.4
0058:  GOTO   027
.................... #int_timer2 
.................... void Interrupt2(){ 
.................... 	if (tmr2if){  
0059:  BTFSS  0C.1
005A:  GOTO   05E
....................     	tmr2if = 0; 
005B:  BCF    0C.1
....................  		output_toggle(pin_d5);                                         
005C:  MOVLW  20
005D:  XORWF  08,F
....................   	} 
005E:  BCF    0C.1
005F:  BCF    0A.3
0060:  BCF    0A.4
0061:  GOTO   027
.................... }        
....................  
....................  
.................... void main(){ 
0062:  MOVF   03,W
0063:  ANDLW  1F
0064:  MOVWF  03
0065:  BSF    03.5
0066:  BSF    1F.0
0067:  BSF    1F.1
0068:  BSF    1F.2
0069:  BCF    1F.3
006A:  MOVLW  07
006B:  MOVWF  1C
006C:  BCF    03.7
.................... 	// Interrupções 
.................... 	T1CON = 0x01;    
006D:  MOVLW  01
006E:  BCF    03.5
006F:  MOVWF  10
.................... 	gie  = 1; 
0070:  BSF    0B.7
....................  	peie  =1; 
0071:  BSF    0B.6
....................   	t0ie = 1; 
0072:  BSF    0B.5
.................... 	tmr1ie=1; 
0073:  BSF    03.5
0074:  BSF    0C.0
.................... 	tmr2ie=1; 
0075:  BSF    0C.1
....................  	t0if = 1;    
0076:  BCF    03.5
0077:  BSF    0B.2
....................     T2CON = 0x0C; 
0078:  MOVLW  0C
0079:  MOVWF  12
....................  
.................... 	// Configurando Timer's 
....................     setup_timer_2(T2_DIV_BY_1, 149, 2); 
007A:  MOVLW  08
007B:  MOVWF  78
007C:  IORLW  04
007D:  MOVWF  12
007E:  MOVLW  95
007F:  BSF    03.5
0080:  MOVWF  12
.................... 	setup_timer_1(T1_DIV_BY_1| T1_INTERNAL); 
0081:  MOVLW  85
0082:  BCF    03.5
0083:  MOVWF  10
.................... 	set_timer1(65336); 
0084:  CLRF   0E
0085:  MOVLW  FF
0086:  MOVWF  0F
0087:  MOVLW  38
0088:  MOVWF  0E
.................... 	setup_timer_0(RTCC_INTERNAL | RTCC_DIV_1); 
0089:  BSF    03.5
008A:  MOVF   01,W
008B:  ANDLW  C7
008C:  IORLW  08
008D:  MOVWF  01
.................... 	set_timer0(156); 
008E:  MOVLW  9C
008F:  BCF    03.5
0090:  MOVWF  01
....................     set_tris_b(0x01);  
0091:  MOVLW  01
0092:  BSF    03.5
0093:  MOVWF  06
.................... 	bit_clear(OPTION_REG,7); 
0094:  BCF    01.7
....................                  
....................     while(1){ 
0095:  GOTO   095
....................     } 
....................          
.................... } 
....................     
0096:  GOTO   096

Configuration Fuses:
   Word  1: 373B   RC NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
