CCS PCM C Compiler, Version 5.025, 30560               11-set-22 22:17

               Filename:   C:\Users\nilof\OneDrive\Documentos\UFPI\3° Período\Arquitetura de Sistemas\Lista C\Questão 8\MPLAB\Questão 8.lst

               ROM used:   51 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 7

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   00E
.................... /* 
.................... Discente: Nilo Rodrigues Alves Filho 
.................... Questão 8: 
.................... Utilizando a interrupção do TIMER0, faça um programa para gerar uma onda quadrada de 10 kHz, 1kHz, 100 Hz, 10 Hz e 1 Hz respectivamente nos pinos RD7, RD6, RD5, RD4 e RD3.  
....................  
.................... */ 
....................  
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #include "regs_pic16f877a.h" 
.................... // DEFS_877  
.................... //  
.................... // Standard definitions for PIC16F877  
.................... //  
.................... // Copyright, Peter H. Anderson, Baltimore, MD, June, '99  
....................   
.................... //#define byte int  
....................  
.................... //#byte PORTD = 0x08 
.................... //#bit INTF = 0xb.1 
....................  
.................... #list  
....................  
....................  
....................  
.................... #use delay(clock = 4000000) 
.................... #bit ponto = PORTD.1 
.................... #INT_TIMER0 
.................... int cont; 
....................  
.................... void InitTimer0(){ 
.................... 	setup_timer_0(T0_INTERNAL | T0_DIV_2); 
0004:  BSF    03.5
0005:  MOVF   01,W
0006:  ANDLW  C0
0007:  MOVWF  01
.................... 	set_timer0(256-250); 
0008:  MOVLW  06
0009:  BCF    03.5
000A:  MOVWF  01
000B:  BCF    0A.3
000C:  BCF    0A.4
000D:  GOTO   024 (RETURN)
.................... } 
....................  
.................... void main(){ 
000E:  MOVF   03,W
000F:  ANDLW  1F
0010:  MOVWF  03
0011:  BSF    03.5
0012:  BSF    1F.0
0013:  BSF    1F.1
0014:  BSF    1F.2
0015:  BCF    1F.3
0016:  MOVLW  07
0017:  MOVWF  1C
0018:  BCF    03.7
....................  
.................... cont = 0; 
0019:  BCF    03.5
001A:  CLRF   20
....................  
.................... set_tris_b(0x01); 
001B:  MOVLW  01
001C:  BSF    03.5
001D:  MOVWF  06
.................... set_tris_d(0x00); 
001E:  MOVLW  00
001F:  MOVWF  08
.................... ext_int_edge(L_TO_H); 
0020:  BSF    01.6
.................... bit_clear(OPTION_REG,7); 
0021:  BCF    01.7
.................... InitTimer0(); 
0022:  BCF    03.5
0023:  GOTO   004
.................... enable_interrupts(GLOBAL | INT_TIMER0); 
0024:  MOVLW  E0
0025:  IORWF  0B,F
.................... 	while(1){ 
.................... 		cont++; 
0026:  INCF   20,F
.................... 		if (cont == 10){ 
0027:  MOVF   20,W
0028:  SUBLW  0A
0029:  BTFSS  03.2
002A:  GOTO   031
.................... 			output_toggle(pin_d7); 
002B:  BSF    03.5
002C:  BCF    08.7
002D:  MOVLW  80
002E:  BCF    03.5
002F:  XORWF  08,F
.................... 			cont = 0; 
0030:  CLRF   20
.................... 		} 
0031:  GOTO   026
.................... 	} 
.................... } 
0032:  GOTO   032

Configuration Fuses:
   Word  1: 373B   RC NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
